// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing order information
type CreateSellOrderRequest struct {
	AssetId              string   `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id"`
	Amount               int32    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	Price                int32    `protobuf:"varint,3,opt,name=price,proto3" json:"price"`
	SellerId             string   `protobuf:"bytes,4,opt,name=seller_id,json=sellerId,proto3" json:"seller_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSellOrderRequest) Reset()         { *m = CreateSellOrderRequest{} }
func (m *CreateSellOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSellOrderRequest) ProtoMessage()    {}
func (*CreateSellOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *CreateSellOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSellOrderRequest.Unmarshal(m, b)
}
func (m *CreateSellOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSellOrderRequest.Marshal(b, m, deterministic)
}
func (m *CreateSellOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSellOrderRequest.Merge(m, src)
}
func (m *CreateSellOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSellOrderRequest.Size(m)
}
func (m *CreateSellOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSellOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSellOrderRequest proto.InternalMessageInfo

func (m *CreateSellOrderRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *CreateSellOrderRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateSellOrderRequest) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *CreateSellOrderRequest) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

// The response message containing the greetings
type SellOrderReply struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Amount               int32                `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	Price                int32                `protobuf:"varint,3,opt,name=price,proto3" json:"price"`
	SellerId             string               `protobuf:"bytes,4,opt,name=seller_id,json=sellerId,proto3" json:"seller_id"`
	AssetId              string               `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3" json:"asset_id"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SellOrderReply) Reset()         { *m = SellOrderReply{} }
func (m *SellOrderReply) String() string { return proto.CompactTextString(m) }
func (*SellOrderReply) ProtoMessage()    {}
func (*SellOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *SellOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SellOrderReply.Unmarshal(m, b)
}
func (m *SellOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SellOrderReply.Marshal(b, m, deterministic)
}
func (m *SellOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SellOrderReply.Merge(m, src)
}
func (m *SellOrderReply) XXX_Size() int {
	return xxx_messageInfo_SellOrderReply.Size(m)
}
func (m *SellOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SellOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_SellOrderReply proto.InternalMessageInfo

func (m *SellOrderReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SellOrderReply) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SellOrderReply) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *SellOrderReply) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *SellOrderReply) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *SellOrderReply) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateSellOrderRequest)(nil), "rpc.CreateSellOrderRequest")
	proto.RegisterType((*SellOrderReply)(nil), "rpc.SellOrderReply")
}

func init() {
	proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077)
}

var fileDescriptor_cd01338c35d87077 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x14, 0x84, 0x71, 0x4a, 0x42, 0xf3, 0x2a, 0xb5, 0x92, 0x41, 0x55, 0x48, 0x97, 0x28, 0x53, 0x26,
	0x0f, 0x65, 0x62, 0x44, 0x88, 0xa1, 0x0b, 0x48, 0x81, 0xbd, 0x72, 0xe3, 0x47, 0x15, 0xc9, 0xc1,
	0xc6, 0x7e, 0x19, 0x58, 0xf8, 0x6f, 0xfc, 0x33, 0x54, 0xa7, 0x20, 0x82, 0x18, 0x19, 0xef, 0xfc,
	0x74, 0xe7, 0xfb, 0x60, 0x66, 0x9c, 0x42, 0x27, 0xac, 0x33, 0x64, 0xf8, 0xc4, 0xd9, 0x26, 0x5f,
	0x50, 0xdb, 0xa1, 0x27, 0xd9, 0xd9, 0xc1, 0x2d, 0xdf, 0x61, 0x79, 0xeb, 0x50, 0x12, 0x3e, 0xa2,
	0xd6, 0x0f, 0x87, 0xf3, 0x1a, 0x5f, 0x7b, 0xf4, 0xc4, 0x2f, 0x61, 0x2a, 0xbd, 0x47, 0xda, 0xb6,
	0x2a, 0x63, 0x05, 0xab, 0xd2, 0xfa, 0x2c, 0xe8, 0x8d, 0xe2, 0x4b, 0x48, 0x64, 0x67, 0xfa, 0x17,
	0xca, 0xa2, 0x82, 0x55, 0x71, 0x7d, 0x54, 0xfc, 0x02, 0x62, 0xeb, 0xda, 0x06, 0xb3, 0x49, 0xb0,
	0x07, 0xc1, 0x57, 0x90, 0x7a, 0xd4, 0x1a, 0xdd, 0x21, 0xe9, 0x34, 0x24, 0x4d, 0x07, 0x63, 0xa3,
	0xca, 0x0f, 0x06, 0xf3, 0x1f, 0xd5, 0x56, 0xbf, 0xf1, 0x39, 0x44, 0xdf, 0x95, 0x51, 0xfb, 0x9f,
	0x6d, 0xa3, 0x4d, 0xf1, 0x78, 0xd3, 0x35, 0x40, 0x13, 0x40, 0xa8, 0xad, 0xa4, 0x2c, 0x29, 0x58,
	0x35, 0x5b, 0xe7, 0x62, 0x6f, 0xcc, 0x5e, 0xe3, 0xc0, 0x6a, 0xd7, 0x3f, 0x8b, 0xa7, 0x2f, 0x7c,
	0x75, 0x7a, 0xbc, 0xbe, 0xa1, 0xf5, 0x3d, 0xc4, 0xe1, 0xfb, 0xfc, 0x0e, 0x16, 0xbf, 0x60, 0xf2,
	0x95, 0x70, 0xb6, 0x11, 0x7f, 0x23, 0xce, 0xcf, 0xc3, 0xe3, 0x78, 0x7e, 0x79, 0xb2, 0x4b, 0x42,
	0xdd, 0xd5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x84, 0x69, 0xdd, 0x57, 0xbf, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderClient is the client API for Order service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderClient interface {
	// Sends a greeting
	CreateSellOrder(ctx context.Context, in *CreateSellOrderRequest, opts ...grpc.CallOption) (*SellOrderReply, error)
}

type orderClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderClient(cc grpc.ClientConnInterface) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) CreateSellOrder(ctx context.Context, in *CreateSellOrderRequest, opts ...grpc.CallOption) (*SellOrderReply, error) {
	out := new(SellOrderReply)
	err := c.cc.Invoke(ctx, "/rpc.Order/CreateSellOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServer is the server API for Order service.
type OrderServer interface {
	// Sends a greeting
	CreateSellOrder(context.Context, *CreateSellOrderRequest) (*SellOrderReply, error)
}

// UnimplementedOrderServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServer struct {
}

func (*UnimplementedOrderServer) CreateSellOrder(ctx context.Context, req *CreateSellOrderRequest) (*SellOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSellOrder not implemented")
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_CreateSellOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSellOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).CreateSellOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Order/CreateSellOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).CreateSellOrder(ctx, req.(*CreateSellOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSellOrder",
			Handler:    _Order_CreateSellOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}
